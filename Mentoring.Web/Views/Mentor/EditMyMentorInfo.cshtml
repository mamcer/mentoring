@model Mentoring.Web.Models.NewMentorModel

@{
    ViewBag.Title = "Edit My Mentor Info";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit my Mentor info</h2>
<br>
<blockquote>
    <p>Please take into account that in order to apply to be a mentor you need to:</p>

    <ul>
        <li>Be in the company for at least one year</li>
        <li>Have a 'senior' seniority or higher</li>
        <li>Have an effective+ performance in your last evaluation</li>
    </ul>
</blockquote>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>In order to make the most of your potential and to make sure the mentoring program is also an opportunity for your development as a mentor, we would like to know your interests and availability. Please, answer the following questions:</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentActivity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentActivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentActivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <blockquote>
            <p style="font-size: small">Keep in mind that every mentor´s activity involves soft skills orientation for mentees</p>
        </blockquote>

        <div class="form-group">
            @Html.LabelFor(model => model.Topics, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for (var i = 0; i < Model.Topics.Count; ++i)
                {
                    <label>
                        @Html.CheckBoxFor(modelItem => Model.Topics[i].Checked, new { @class = "checkbox-inline" })
                        @Html.DisplayFor(modelItem => Model.Topics[i].Description)
                        @Html.HiddenFor(modelItem => Model.Topics[i].Id)
                    </label>
                <br>
                }
                @Html.ValidationMessageFor(model => model.Topics, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="OtherTopicContainer" hidden>
            @Html.LabelFor(model => model.OtherTopic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OtherTopic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OtherTopic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MentoringTarget, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MentoringTarget, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MentoringTarget, "", new { @class = "text-danger" })
            </div>
        </div>

        <blockquote>
            <p style="font-size: small">E.g. Java, Web UI, Big data, NET, Frameworks</p>
        </blockquote>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxMentees, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxMentees, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxMentees, "", new { @class = "text-danger" })
            </div>
        </div>

        <blockquote>
            <p style="font-size: small">Bear in mind the program requires you to spend quality time a month to be devoted to each mentee</p>
        </blockquote>

        <div class="form-group">
            @Html.LabelFor(model => model.Availability, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for (var i = 0; i < Model.Availability.Count; ++i)
                {
                    <label>
                        @Html.CheckBoxFor(modelItem => Model.Availability[i].Checked, new { @class = "checkbox-inline" })
                        @Html.DisplayFor(modelItem => Model.Availability[i].Description)
                        @Html.HiddenFor(modelItem => Model.Availability[i].Id)
                    </label>
                <br>
                }
                @Html.ValidationMessageFor(model => model.Availability, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OtherAvailability, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OtherAvailability, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OtherAvailability, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.MeetingsMode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MeetingsMode, ViewBag.MeetingModes as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeetingsMode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SeniorityLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for (var i = 0; i < Model.SeniorityLevel.Count; ++i)
                {
                    <label>
                        @Html.CheckBoxFor(modelItem => Model.SeniorityLevel[i].Checked, new { @class = "checkbox-inline" })
                        @Html.DisplayFor(modelItem => Model.SeniorityLevel[i].Description)
                        @Html.HiddenFor(modelItem => Model.SeniorityLevel[i].Id)
                    </label><br>
                }
                @Html.ValidationMessageFor(model => model.Availability, "", new { @class = "text-danger" })
            </div>  
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Expectations, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Expectations, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Expectations, "", new { @class = "text-danger" })
            </div>
        </div>

        <blockquote>
            <p style="font-size: small">Tell us about yourself, your strengths and what you can give the mentee and why you are interested in joining the program.</p>
        </blockquote>

        <div class="form-group">
            @Html.LabelFor(model => model.Seniority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Seniority, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Seniority, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-primary" />&nbsp; &nbsp;
                @Html.ActionLink("Cancel", "MyMentorInfo", "Mentor")
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $('#Topics_4__Checked').click(function () {
            $("#OtherTopicContainer").toggle("fast");
        });
    </script>
}