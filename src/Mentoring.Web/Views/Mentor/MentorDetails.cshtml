@model Mentoring.Web.Models.MentorModel

@{
    ViewBag.Title = "Mentor Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Name</h2>

<div>
    <hr />
    @{ var currentUser = (Mentoring.Web.Models.UserModel)Session["UserInfo"]; }
    @if (currentUser.IsLoggedAs(Mentoring.Core.Enums.UserRoleCode.Career))
    {
        @Html.ActionLink("Remove Mentor", "Remove", new { id = Model.Id })
    }
    
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NickName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NickName)
        </dd>
        
        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>

        <dd>
            <a href="mailto:@Html.DisplayFor(model => model.Email)">@Html.DisplayFor(model => model.Email)</a>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Topics)
        </dt>
        
        <dd>
            @foreach (var topic in @Model.Topics)
            {
                <ul>
                    @if (topic.Description == "Other")
                    {
                        <li>Other: @Html.DisplayFor(itemModel => @Model.OtherTopic)</li>
                    }
                    else
                    {
                        <li>@topic.Description</li>
                    }
                </ul>
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MentoringTarget)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MentoringTarget)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CurrentActivity)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CurrentActivity)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Expectations)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Expectations)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MaxMentees)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MaxMentees)
        </dd>
        
        <dt>
            @Html.DisplayNameFor(model => model.MeetingsMode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MeetingsMode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SeniorityLevel)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SeniorityLevel)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Seniority)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Seniority)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Location)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Location)
        </dd>

    </dl>
</div>